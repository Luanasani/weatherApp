services:
  api:
    build: .
    image: weather-service:dev
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./:/app
    command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  test:
    build: .
    image: weather-service:dev
    environment:
      - PYTHONPATH=/app
      - OPENWEATHER_API_KEY=test-key
    volumes:
      - ./:/app
    command: pytest

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    image: weather-frontend:dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    depends_on:
      - api

  loki:
    image: grafana/loki:2.9.4
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki

  promtail:
    image: grafana/promtail:2.9.4
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:10.4.3
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - loki

volumes:
  grafana-storage:
  loki-data:
